name: Test Build

# Cancel previous runs on new push
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build for'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - windows
          - macos
          - linux

jobs:
  test-build-linux:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'linux' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Cache Nuxt build
        uses: actions/cache@v4
        with:
          path: |
            .nuxt
            .output
          key: ${{ runner.os }}-nuxt-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libasound2-dev

      - name: Install dependencies
        run: |
          # Try frozen lockfile first, fall back to regular install if needed
          pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Build Nuxt app
        run: pnpm build:nuxt

      - name: Verify build output
        run: |
          echo "Contents of .output directory:"
          node -e "try { console.log(require('fs').readdirSync('.output')); } catch(e) { console.log('No .output directory found'); }"
          echo "Contents of dist-electron directory:"
          node -e "try { console.log(require('fs').readdirSync('dist-electron')); } catch(e) { console.log('No dist-electron directory found'); }"

      - name: Build Electron app
        run: |
          # Clean any previous builds
          rm -rf dist
          # Build electron app for Linux
          pnpm build:electron --linux --publish=never
        env:
          DEBUG: electron-builder

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-build-linux
          path: dist/*
          retention-days: 3

  test-build-windows:
    runs-on: windows-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'windows' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Cache Nuxt build
        uses: actions/cache@v4
        with:
          path: |
            .nuxt
            .output
          key: ${{ runner.os }}-nuxt-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-

      - name: Install dependencies
        run: |
          # Try frozen lockfile first, fall back to regular install if needed
          pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Build Nuxt app
        run: pnpm build:nuxt

      - name: Verify build output
        run: |
          echo "Contents of .output directory:"
          if (Test-Path .output) { Get-ChildItem .output } else { echo "No .output directory found" }
          echo "Contents of dist-electron directory:"
          if (Test-Path dist-electron) { Get-ChildItem dist-electron } else { echo "No dist-electron directory found" }
        shell: pwsh

      - name: Build Electron app
        run: |
          # Clean any previous builds
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          # Build electron app for Windows  
          pnpm build:electron --win --publish=never
        shell: pwsh
        env:
          DEBUG: electron-builder

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-build-windows
          path: dist/*
          retention-days: 3

  test-build-macos:
    runs-on: macos-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'macos' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Cache Nuxt build
        uses: actions/cache@v4
        with:
          path: |
            .nuxt
            .output
          key: ${{ runner.os }}-nuxt-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-

      - name: Install dependencies
        run: |
          # Try frozen lockfile first, fall back to regular install if needed
          pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Build Nuxt app
        run: pnpm build:nuxt

      - name: Verify build output
        run: |
          echo "Contents of .output directory:"
          node -e "try { console.log(require('fs').readdirSync('.output')); } catch(e) { console.log('No .output directory found'); }"
          echo "Contents of dist-electron directory:"
          node -e "try { console.log(require('fs').readdirSync('dist-electron')); } catch(e) { console.log('No dist-electron directory found'); }"

      - name: Build Electron app
        run: |
          # Clean any previous builds
          rm -rf dist
          # Build electron app for macOS
          pnpm build:electron --mac --publish=never
        env:
          DEBUG: electron-builder

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-build-macos
          path: dist/*
          retention-days: 3
